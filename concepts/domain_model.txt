Es gibt Diagramme.
Diagramme werden in einer Textsprache beschrieben.
Durch die Funktion "Zeichne Diagramm" wird das Diagramm gezeichnet.

Es gibt verschiedene Digrammtypen, z.B. Klassendiagramme.
Derzeit werden wahrscheinlich nur Klassendiagramme unterstützt.

Ein Klassendiagramm kann die folgenden Komponenten haben:
1. Klassen
	Besitzen Namen und Farbe
2. Einfache Assoziation
	Verbinden zwei Klassen, haben eine Richtung und eine Beschriftung
3. Kardinalität
	fügt einer Assoziation eine Kardinalität hinzu, kann auf beiden Seiten sein.
4. Gerichtete Assoziation
	enthält Richtung und Text
5. Aggregation
	Assoziation mit Besitzanzeige
6. Komposition
	Wie oben
7. Notes
	Können an Klassen angehängt werden und direkt an Diagramme
8. Vererbung
	Zwischen Basisklasse und Ableitung
9. Interface Vererbung
10. Abhängigkeiten
11. Attribute (z.B. <<IDisposable>>)
12. Details
	Name
	Zugriff


Eine Klasse kann mehrere Assoziationen haben.
Eine Assoziation verbindet immer zwei Klassen miteinander.
Eine Assoziation kann gerichtet sein, in eine Richtung oder in beide.
Im Grunde ist also die Verbindung gerichtet und kann eine Kardinalität haben.
Eine Klasse kann beliebig viele Assoziationen zu anderen Klassen haben (auch zu sich selber).

Allerdings ist die Assoziation nicht in der Klasse gespeichert, sondern verbindet einfach zwei Klassen miteinander.
Jede Klasse kann mehrmals definiert werden, sie werden über den Namen wohl identifziert,
im unteren Beispiel ist die Klasse Order mehrmals definiert, aber auch wenn man ihr mehrere Attribute hinzufügt so tauchen
nur die Attribute der ersten Klassendefinition auf. Im unteren Fall hat Order nur eine Property "Surname", kein "Forename".

http://yuml.me/diagram/scruffy/class/[note: You can stick notes on diagrams too!{bg:cornsilk}],[Customer]<>1-orders 0..*>[Order], [Order|+Surname+]++*-*>[LineItem], [Order|+Forename+]-1>[DeliveryMethod], [Order]*-*>[Product], [Category]<->[Product], [DeliveryMethod]^[National], [DeliveryMethod]^[International]