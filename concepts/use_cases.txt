Problem bestehender UML-Editoren

1. Sehr mühsam und kompliziert
Enterprise Architect, Rational Rose usw... sind zu komplex, man hat zu viele Optionsmöglichkeiten und 
ist ständig damit beschäftigt, sich durch Dialoge zu clicken.

2. Layouten ist sehr mühsam
Bei Enterprise Architect verbringt man mehr Zeit damit, das Layout anzuordnen als sinnvolle Ergänzungen zu machen

3. Bestehenden Code zu importieren ist aufwendig


Zwei Use-Cases:

1. UML as a Sketch
Bevor man mit einem Projekt beginnt, erstellt man seine Klassenhierarchie, legt die wichtigsten Properties und Methoden anzuordnen
und Verknüpfungen zwischen diesen.
Basierend auf diesem Sketch fängt man mit der Implementierung an.
Erforderlich:
- Benutzerschnittstelle, um Klassen und ihre Member anzulegen, ebenso wie Verknüpfungen zwischen ihnen (EINFACH zu bedienen)
- Klassen und Member speichern und wieder laden
- Idealerweise könnte man aus einer Architektur mehrere Diagramme erstellen (um z.B. unterschiedliche Aspekte darzustellen)
- Später: Aus den Metadaten könnte man automatisch Code generieren

2. UML as documentation
Nachdem eine Architektur entworfen wurde möchte man daraus ein UML Diagramm generieren um eine Dokumentation zu haben.
Es sollen aber nur ausgewählte Teile der Architektur dargestellt werden.
- Metadaten müssen importiert werden können (entweder als Assembly oder aus Source Code mit Roslyn).
- Nachdem die Metadaten geladen wurden müssen sie editiert werden können (man könnte sich aber die Originalverknüpfung merken (Klassenname oder Dateiname z.B.)